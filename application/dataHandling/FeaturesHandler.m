classdef FeaturesHandler
    properties      
        % We set the discrete columns at the end because we do
        % preprocess and it makes the concat operation easier
        FeatureNames = ["raw_acc:3d:mean_x", ...
            "raw_acc:3d:mean_y", ...
            "raw_acc:3d:mean_z", ...
            "raw_acc:3d:std_x", ...
            "raw_acc:3d:std_y", ...
            "raw_acc:3d:std_z", ...
            "raw_acc:3d:ro_xy", ...
            "raw_acc:3d:ro_xz", ...
            "raw_acc:3d:ro_yz", ...
            "proc_gyro:3d:mean_x", ...
            "proc_gyro:3d:mean_y", ...
            "proc_gyro:3d:mean_z", ...
            "proc_gyro:3d:std_x", ...
            "proc_gyro:3d:std_y", ...
            "proc_gyro:3d:std_z", ...
            "proc_gyro:3d:ro_xy", ...
            "proc_gyro:3d:ro_xz", ...
            "proc_gyro:3d:ro_yz", ...
            "raw_magnet:3d:mean_x", ...
            "raw_magnet:3d:mean_y", ...
            "raw_magnet:3d:mean_z", ...
            "raw_magnet:3d:std_x", ...
            "raw_magnet:3d:std_y", ...
            "raw_magnet:3d:std_z", ...
            "raw_magnet:3d:ro_xy", ...
            "raw_magnet:3d:ro_xz", ...
            "raw_magnet:3d:ro_yz", ...
            "watch_acceleration:3d:mean_x", ...
            "watch_acceleration:3d:mean_y", ...
            "watch_acceleration:3d:mean_z", ...
            "watch_acceleration:3d:std_x", ...
            "watch_acceleration:3d:std_y", ...
            "watch_acceleration:3d:std_z", ...
            "watch_acceleration:3d:ro_xy", ...
            "watch_acceleration:3d:ro_xz", ...
            "watch_acceleration:3d:ro_yz", ...
            "watch_heading:mean_cos", ...
            "watch_heading:std_cos", ...
            "watch_heading:mom3_cos", ...
            "watch_heading:mom4_cos", ...
            "watch_heading:mean_sin", ...
            "watch_heading:std_sin", ...
            "watch_heading:mom3_sin", ...
            "watch_heading:mom4_sin", ...
            "location:num_valid_updates", ...
            "location:log_latitude_range", ...
            "location:log_longitude_range", ...
            "location:min_altitude", ...
            "location:max_altitude", ...
            "location:min_speed", ...
            "location:max_speed", ...
            "location:log_diameter", ...
            "location_quick_features:std_lat", ...
            "location_quick_features:std_long", ...
            "location_quick_features:lat_change", ...
            "location_quick_features:long_change", ...
            "location_quick_features:mean_abs_lat_deriv", ...
            "location_quick_features:mean_abs_long_deriv", ...
            "audio_naive:mfcc0:mean", ...
            "audio_naive:mfcc1:mean", ...
            "audio_naive:mfcc2:mean", ...
            "audio_naive:mfcc3:mean", ...
            "audio_naive:mfcc4:mean", ...
            "audio_naive:mfcc5:mean", ...
            "audio_naive:mfcc6:mean", ...
            "audio_naive:mfcc7:mean", ...
            "audio_naive:mfcc8:mean", ...
            "audio_naive:mfcc9:mean", ...
            "audio_naive:mfcc10:mean", ...
            "audio_naive:mfcc11:mean", ...
            "audio_naive:mfcc12:mean", ...
            "audio_naive:mfcc0:std", ...
            "audio_naive:mfcc1:std", ...
            "audio_naive:mfcc2:std", ...
            "audio_naive:mfcc3:std", ...
            "audio_naive:mfcc4:std", ...
            "audio_naive:mfcc5:std", ...
            "audio_naive:mfcc6:std", ...
            "audio_naive:mfcc7:std", ...
            "audio_naive:mfcc8:std", ...
            "audio_naive:mfcc9:std", ...
            "audio_naive:mfcc10:std", ...
            "audio_naive:mfcc11:std", ...
            "audio_naive:mfcc12:std", ...
            "audio_properties:max_abs_value", ...
            "lf_measurements:light", ...
            "lf_measurements:pressure", ...
            "lf_measurements:proximity_cm", ...
            "lf_measurements:relative_humidity", ...
            "lf_measurements:battery_level", ...
            "lf_measurements:screen_brightness", ...
            "lf_measurements:temperature_ambient", ...
            "discrete:battery_plugged", ...
            "discrete:battery_state", ...
            "discrete:on_the_phone", ...
            "discrete:ringer_mode", ...
            "discrete:wifi_status", ...
            "discrete:time_of_day"];
    end
    
    methods
        function obj = FeaturesHandler()
        end
        
        function index = GetContinuousFeatures(obj)
            index = 1:92;
        end
        
        function index = GetDiscreteFeatures(obj)
            index = 93:98;
        end
        
        function index = GetFeatureIndex(obj, featureDescription)
            [~, index] = intersect(obj.FeatureNames, featureDescription, "stable");
        end
    end
end